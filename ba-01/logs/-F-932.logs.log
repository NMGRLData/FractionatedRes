do run
loading script "felix_peak_hop_argon_2CDD.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x5.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=139.8, duration=0.0109479427338
script duration name:peak_hop_argon_2CDD seconds:140.0
loading script "felix_peak_hop_argon_2CDD.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x5.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.50339508057e-05
loading script "felix_peak_hop_argon_2CDD.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x5.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.60283660889e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000103950500488
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=7.91549682617e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.29832458496e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=2.0, duration=6.00814819336e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=6.19888305664e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.29696655273e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=6.50882720947e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.39233398438e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=6.103515625e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.41617584229e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=6.22272491455e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000107049942017
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.48770141602e-05
executed snippet estimated_duration=384.0, duration=0.0153558254242
script duration name:air_x5 seconds:384.0
loading script "felix_peak_hop_argon_2CDD.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x5.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000136852264404
executed snippet estimated_duration=4.0, duration=0.00106501579285
Script duration 524.0
Run total estimated duration= 525.000
run duration: 0:08:45
doing event level: 2
18:53:26 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4948026768
close session 4948026768
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run ba-01-F-932
loading script "felix_peak_hop_argon_2CDD.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x5.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run ba-01-F-932
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
18:53:26 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=AX(CDD),L2(CDD),H2,H1,AX,L1, signals=0.00000,0.01395,5.12557,-0.13652,-0.27289,-0.89304
18:53:26 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
18:53:26 -- ******* Pre Extraction Check Passed *******
=================================================================================
18:53:26 -- stopping status monitor
stop 4923772464
Status monitor stopped
Status monitor finished
18:53:31 -- starting status monitor
start 4923772464
StatusMonitor period=3. Frequencies(state=1, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 18:53:35.921769
Extraction Started felix_air_x5.py
18:53:35 -- ******* Extraction Started felix_air_x5.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x129801b90>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.79221343994e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=8.29696655273e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=6.91413879395e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000120162963867
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=2.0, duration=5.31673431396e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=5.79357147217e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.41481781006e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=5.88893890381e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.20024108887e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.48634338379e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000135898590088
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=6.29425048828e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.39097595215e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=6.103515625e-05
executed snippet estimated_duration=384.0, duration=0.0130279064178
Air Pipette x5
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.60012054443e-05
Waiting for minibone access
wait ('JanMiniboneFlag', 0) {}
waiting for JanMiniboneFlag = 0
Read JanMiniboneFlag ===>> 0
finished waiting
Minibone released
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
acquire ('FelixMiniboneFlag',) {'clear': True}
acquire FelixMiniboneFlag
Set FelixMiniboneFlag 1 ===>> OK
FelixMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
minibone acquired
executed snippet estimated_duration=0, duration=0.017814874649
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.08374786377e-05
Prepare for Air Shot
close () {'description': 'Felix Inlet'}
close name=--- desc=Felix Inlet
checking ownership. requestor=192.168.2.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
18:53:36 -- CLOSE  VALVE-H (Felix Inlet)
-------------------------- close None (Felix Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Felix Ion Pump'}
open name=--- desc=Felix Ion Pump
checking ownership. requestor=192.168.2.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open V ===>> OK
GetIndicatorState V ===>> OK
change switch state (True, True)
18:53:36 -- OPEN   VALVE-V (Felix Ion Pump)
-------------------------- open None (Felix Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=192.168.2.137
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
18:53:37 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=192.168.2.137
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
18:53:37 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Bone to Turbo'}
open name=--- desc=Bone to Turbo
checking ownership. requestor=192.168.2.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open C ===>> OK
GetIndicatorState C ===>> OK
change switch state (True, True)
18:53:38 -- OPEN   VALVE-C (Bone to Turbo)
-------------------------- open None (Bone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Minibone'}
open name=--- desc=Bone to Minibone
checking ownership. requestor=192.168.2.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open E ===>> OK
GetIndicatorState E ===>> OK
change switch state (True, True)
18:53:38 -- OPEN   VALVE-E (Bone to Minibone)
-------------------------- open None (Bone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=192.168.2.137
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
GetIndicatorState I ===>> OK
change switch state (True, True)
18:53:39 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Getter GP-50'}
open name=--- desc=Bone to Getter GP-50
checking ownership. requestor=192.168.2.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
GetIndicatorState N ===>> OK
change switch state (True, True)
18:53:39 -- OPEN   VALVE-N (Bone to Getter GP-50)
-------------------------- open None (Bone to Getter GP-50) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Bone to CO2 Laser'}
close name=--- desc=Bone to CO2 Laser
checking ownership. requestor=192.168.2.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close D ===>> OK
GetIndicatorState D ===>> False
change switch state (True, True)
18:53:40 -- CLOSE  VALVE-D (Bone to CO2 Laser)
-------------------------- close None (Bone to CO2 Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Diode Laser'}
close name=--- desc=Bone to Diode Laser
checking ownership. requestor=192.168.2.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close B ===>> OK
GetIndicatorState B ===>> False
change switch state (True, True)
18:53:41 -- CLOSE  VALVE-B (Bone to Diode Laser)
-------------------------- close None (Bone to Diode Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=5.32620096207
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000118970870972
Evacuate Pipette 2
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=192.168.2.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
18:53:41 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
18:53:41 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
State checksums do not match. Local:-923118529 Remote:-23723508
State checksum failed
18:53:43 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.14336586
executed snippet estimated_duration=48.0, duration=17.5668509007
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.29832458496e-05
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
18:53:59 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0983939171
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
18:54:15 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=18.1078388691
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=2.0, duration=0.000101089477539
Prepare for air expansion
close () {'description': 'Bone to Turbo'}
close name=--- desc=Bone to Turbo
checking ownership. requestor=192.168.2.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close C ===>> OK
GetIndicatorState C ===>> False
change switch state (True, True)
18:54:17 -- CLOSE  VALVE-C (Bone to Turbo)
-------------------------- close None (Bone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Bone to Minibone'}
open name=--- desc=Bone to Minibone
checking ownership. requestor=192.168.2.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open E ===>> OK
GetIndicatorState E ===>> OK
change switch state (True, True)
18:54:18 -- OPEN   VALVE-E (Bone to Minibone)
-------------------------- open None (Bone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=192.168.2.137
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open I ===>> OK
GetIndicatorState I ===>> OK
change switch state (True, True)
18:54:19 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=3.0, duration=2.76478099823
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000123977661133
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=192.168.2.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
18:54:20 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.05629301071
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
18:54:22 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.1276938915
executed snippet estimated_duration=51.0, duration=18.1422319412
ExpandPipette2.py completed successfully
gosub finished
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
18:54:38 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
Shot 2
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000211954116821
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
18:54:39 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.1306860447
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
18:54:56 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=18.0659868717
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.98973846436e-05
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=192.168.2.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
18:54:57 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.04640007019
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
State checksums do not match. Local:-1603457206 Remote:-1268871202
State checksum failed
18:55:00 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.1529350281
executed snippet estimated_duration=51.0, duration=18.091709137
ExpandPipette2.py completed successfully
gosub finished
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
18:55:16 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
Shot 3
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000171899795532
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
18:55:17 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.103924036
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
18:55:34 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=18.0222871304
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000211000442505
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=192.168.2.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
18:55:35 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.06927418709
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
set states for children of Y. state=True
GetIndicatorState Y ===>> OK
change switch state (True, True)
refresh_canvas_needed fired
18:55:38 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.1833109856
executed snippet estimated_duration=51.0, duration=18.1579339504
ExpandPipette2.py completed successfully
gosub finished
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
18:55:53 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
Shot 4
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000149011611938
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
18:55:55 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0843300819
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
18:56:11 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=18.0760860443
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.5101852417e-05
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=192.168.2.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
18:56:13 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.06011104584
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
18:56:15 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.1115839481
executed snippet estimated_duration=51.0, duration=18.0865440369
ExpandPipette2.py completed successfully
gosub finished
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
18:56:31 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
Shot 5
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.70227813721e-05
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
18:56:33 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.1092658043
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
18:56:49 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=18.0415689945
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.48634338379e-05
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=192.168.2.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
18:56:51 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.07411694527
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
18:56:53 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0839521885
executed snippet estimated_duration=51.0, duration=18.1509709358
ExpandPipette2.py completed successfully
gosub finished
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
18:57:09 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=389.0, duration=214.633307219
felix_air_x5.py completed successfully
no extraction action
Requested Output= 0.000
Achieved Output=  0.000
no extraction action
no extraction action
no extraction action
no extraction action
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
Popen(['git', 'cat-file', '--batch-check'], cwd=/Users/obama/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
not connected to db mysql://felixexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-10-17T18:48:06',
                    'title': 'iServer Hum.',
                    'value': 27.3}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-10-17T18:57:00',
                     'title': None,
                     'value': 97.05},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-10-17T18:57:01',
                     'title': None,
                     'value': 98.51608}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-10-17T16:59:58',
                       'title': None,
                       'value': 73.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-10-17T18:51:07',
                       'title': 'iServer Temp.',
                       'value': 73.7},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-10-17T18:29:09',
                       'title': None,
                       'value': 18.0}]}
Extraction Finished
18:57:13 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
18:57:13 -- Sending spectrometer configuration
======== Sending configuration ========
caching configuration from /Users/obama/PychronDev/setupfiles/spectrometer/configurations/argon_2CDD.cfg
SetDeflection H1(CDD),0.0 ===>> Error: could not set Deflection H1(CDD) Set to 0
SetDeflection L2(CDD),0.0 ===>> Error: could not set Deflection L2(CDD) Set to 0
SetDeflection L1(CDD),0.0 ===>> Error: could not set Deflection L1(CDD) Set to 0
SetDeflection H2(CDD),600.0 ===>> Error: could not set Deflection H2(CDD) Set to 600
SetZFocus 1.65 ===>> OK
SetHV 9900.0 ===>> OK
SetZSymmetry 3.35 ===>> OK
SetExtractionLens 63.57 ===>> OK
SetIonRepeller -5.15 ===>> OK
SetElectronEnergy 125.02 ===>> OK
SetYSymmetry 38.07 ===>> OK
send trap current 250.0
GetParameter Trap Current Readback ===>> 248.718732832815
SetParameter Trap Current Set,250.0 ===>> OK
updating mftable name argon_2CDD
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon_2CDD.csv
============ MFtable ===========
Isotope  H2     AX(CDD)L2(CDD)
Ar40     3.7670 --- ---
Ar38     --- 3.7933 ---
Ar36     --- --- 3.7673
PHHCbs   --- 3.8084 ---
================================
get initial guess discrete
get initial guess discrete
get initial guess discrete
======== Configuration Finished ========
GetYSymmetry ===>> 38.07
GetZSymmetry ===>> 3.35
GetParameter Trap Current Readback ===>> 247.935542940853
GetHighVoltage ===>> 9900
start measurement
do measurement
L#=ba-01-F analysis type=blank_air
Measurement Started felix_peak_hop_argon_2CDD.py
18:57:13 -- ******* Measurement Started felix_peak_hop_argon_2CDD.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 63.57
GetYSymmetry ===>> 38.07
GetZSymmetry ===>> 3.35
GetZFocus ===>> 1.65
GetDeflection H2 (CDD) ===>> 0
GetDeflection H1 (CDD) ===>> 0
GetDeflection AX (CDD) ===>> 0
GetDeflection L1 (CDD) ===>> 0
GetDeflection L2 (CDD) ===>> 0
GetGain H2 ===>> 0.9809305
GetGain H1 ===>> 0.9706
GetGain AX ===>> 0.96269
GetGain L1 ===>> 0.970094835296087
GetGain L2 ===>> 0.967359864778375
GetGain H2(CDD) ===>> 0
GetGain H1(CDD) ===>> 0
GetGain AX(CDD) ===>> 0
GetGain L1(CDD) ===>> 0
GetGain L2(CDD) ===>> 0
GetParameter Trap Current Readback ===>> 248.718732832815
GetParameter Source Current Readback ===>> 856.054507721419
pre measurement save
New frame /Users/obama/PychronDev/data/isotopes/41/103123-0778-4bea-a813-ead3316ae918.h5
flush and close file /Users/obama/PychronDev/data/isotopes/41/103123-0778-4bea-a813-ead3316ae918.h5
testing...
no interpolation path defined
molweights={'PHHCl': 38.13021421, 'Ar40': 39.9624, 'PM41': 41.0, 'Ar35': 35.0, 'Ar36': 35.9675, 'Ar37': 36.9668, 'PHHCbs': 38.9016474, 'Ar38': 37.9627, 'Ar39': 38.964, 'PM42': 42.0}
setting detector H2 to PM42 (42.0624)
setting detector H1 to PM41 (40.9624)
setting detector AX to Ar40 (40.0624)
setting detector L1 to Ar39 (39.0624)
setting detector L2 to Ar38 (37.9624)
setting detector H2(CDD) to PM42 (41.9624)
setting detector H1(CDD) to PM41 (40.9624)
setting detector AX(CDD) to Ar40 (39.9624)
setting detector L1(CDD) to PHHCbs (38.9624)
setting detector L2(CDD) to PHHCl (38.0624)
executed snippet estimated_duration=171.0, duration=0.014533996582
unknown measurement script
activate_detectors ('H2', 'H1', 'AX(CDD)', 'L1', 'L2(CDD)') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=PM42
setting isotope det=H1, iso=PM41
setting isotope det=AX(CDD), iso=Ar40
setting isotope det=L1, iso=Ar39
setting isotope det=L2(CDD), iso=PHHCl
load analysis view
set_spectrometer_configuration ('argon_2CDD',) {}
======== Sending configuration ========
SetDeflection H1(CDD),0.0 ===>> Error: could not set Deflection H1(CDD) Set to 0
SetDeflection L2(CDD),0.0 ===>> Error: could not set Deflection L2(CDD) Set to 0
SetDeflection L1(CDD),0.0 ===>> Error: could not set Deflection L1(CDD) Set to 0
SetDeflection H2(CDD),600.0 ===>> Error: could not set Deflection H2(CDD) Set to 600
SetZFocus 1.65 ===>> OK
SetHV 9900.0 ===>> OK
SetZSymmetry 3.35 ===>> OK
SetExtractionLens 63.57 ===>> OK
SetIonRepeller -5.15 ===>> OK
SetElectronEnergy 125.02 ===>> OK
SetYSymmetry 38.07 ===>> OK
send trap current 250.0
GetParameter Trap Current Readback ===>> 248.047427211133
SetParameter Trap Current Set,250.0 ===>> OK
updating mftable name argon_2CDD
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon_2CDD.csv
============ MFtable ===========
Isotope  H2     AX(CDD)L2(CDD)
Ar40     3.7670 --- ---
Ar38     --- 3.7933 ---
Ar36     --- --- 3.7673
PHHCbs   --- 3.8084 ---
================================
get initial guess discrete
get initial guess discrete
get initial guess discrete
======== Configuration Finished ========
GetYSymmetry ===>> 38.07
GetZSymmetry ===>> 3.35
GetParameter Trap Current Readback ===>> 248.047427211133
GetHighVoltage ===>> 9900
position_magnet ('Ar40',) {'detector': 'H2'}
detector Detector(H2)
POSITION Ar40 H2
molweights={'PHHCl': 38.13021421, 'Ar40': 39.9624, 'PM41': 41.0, 'Ar35': 35.0, 'Ar36': 35.9675, 'Ar37': 36.9668, 'PHHCbs': 38.9016474, 'Ar38': 37.9627, 'Ar39': 38.964, 'PM42': 42.0}
setting detector H2 to Ar40 (39.9624)
setting detector H1 to PHHCbs (38.8624)
setting detector AX to Ar38 (37.9624)
setting detector L1 to Ar37 (36.9624)
setting detector L2 to Ar36 (35.8624)
setting detector H2(CDD) to Ar40 (39.8624)
setting detector H1(CDD) to PHHCbs (38.8624)
setting detector AX(CDD) to Ar38 (37.8624)
setting detector L1(CDD) to Ar37 (36.8624)
setting detector L2(CDD) to Ar36 (35.9624)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76705
GetHighVoltage ===>> 9900
positioning Ar40 (3.76705) on H2
setting magnet DAC
current  : 3.767050
requested: 3.767050
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.76705 ===>> OK
set_dac. change=False
equilibrate () {'delay': 3, 'inlet': 'H', 'outlet': 'V', 'eqtime': 30.0}
Equilibration Started
18:57:14 -- ******* Equilibration Started *******
checking ownership. requestor=192.168.2.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close V ===>> OK
GetIndicatorState V ===>> False
change switch state (True, True)
18:57:14 -- CLOSE  VALVE-V (Felix Ion Pump)
waiting 3s before opening inlet value ('H',)
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x141127ad0>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x14297f4d0>"
setting label 0 H2 Ar40
setting label 1 H1 PHHCbs
setting label 2 AX(CDD) Ar38
setting label 3 L1 Ar37
setting label 4 L2(CDD) Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x14297f890>"
setting label 0 H2 Ar40
setting label 1 H1 PHHCbs
setting label 2 AX(CDD) Ar38
setting label 3 L1 Ar37
setting label 4 L2(CDD) Ar36
checking ownership. requestor=192.168.2.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open H ===>> OK
GetIndicatorState H ===>> OK
change switch state (True, True)
18:57:17 -- OPEN   VALVE-H (Felix Inlet)
equilibrating for 30.0sec
set_time_zero (0,) {}
sniff (30.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX(CDD)), Detector(L1), Detector(L2(CDD))]
add group /sniff/Ar40 (Group) u'' table H2
add group /sniff/PHHCbs (Group) u'' table H1
add group /sniff/Ar38 (Group) u'' table AX(CDD)
add group /sniff/Ar37 (Group) u'' table L1
add group /sniff/Ar36 (Group) u'' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/41/103123-0778-4bea-a813-ead3316ae918.h5
measuring sniff. ncounts=30.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
measurement period (ms) = 1048.576
18:57:43 -- collecting point 25
Equilibration Finished
18:57:47 -- ******* Equilibration Finished *******
checking ownership. requestor=192.168.2.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
18:57:47 -- CLOSE  VALVE-H (Felix Inlet)
Post Equilibration Started felix_pump_extraction_line.py
18:57:47 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000147104263306
executed snippet estimated_duration=4.0, duration=0.00125908851624
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000172853469849
Pump Bone
close () {'description': 'Felix Inlet'}
close name=--- desc=Felix Inlet
checking ownership. requestor=192.168.2.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
18:57:47 -- CLOSE  VALVE-H (Felix Inlet)
-------------------------- close None (Felix Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
is_closed ('A',) {}
is A () closed?
is closed False
close () {'description': 'CO2 Laser to Bone'}
close name=--- desc=CO2 Laser to Bone
checking ownership. requestor=192.168.2.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Bone) result=[(True, False)]
action=close, ok=True, locked=[True]
sleep (1,) {}
SLEEP 1.0
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=192.168.2.137
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Bone to Turbo'}
open name=--- desc=Bone to Turbo
checking ownership. requestor=192.168.2.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open C ===>> OK
GetIndicatorState C ===>> OK
change switch state (True, True)
18:57:49 -- OPEN   VALVE-C (Bone to Turbo)
-------------------------- open None (Bone to Turbo) result=[(True, True)]
waiting for write to finish
measurement finished
estimated time: 31.457 actual time: :31.659
flush and close file /Users/obama/PychronDev/data/isotopes/41/103123-0778-4bea-a813-ead3316ae918.h5
set_spectrometer_configuration ('argon_2CDD',) {}
======== Sending configuration ========
caching configuration from /Users/obama/PychronDev/setupfiles/spectrometer/configurations/argon_2CDD.cfg
SetDeflection H1(CDD),0.0 ===>> Error: could not set Deflection H1(CDD) Set to 0
SetDeflection L2(CDD),0.0 ===>> Error: could not set Deflection L2(CDD) Set to 0
SetDeflection L1(CDD),0.0 ===>> Error: could not set Deflection L1(CDD) Set to 0
SetDeflection H2(CDD),600.0 ===>> Error: could not set Deflection H2(CDD) Set to 600
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Getter GP-50'}
open name=--- desc=Bone to Getter GP-50
SetZFocus 1.65 ===>> OK
SetHV 9900.0 ===>> OK
SetZSymmetry 3.35 ===>> OK
SetExtractionLens 63.57 ===>> OK
checking ownership. requestor=192.168.2.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
SetIonRepeller -5.15 ===>> OK
SetElectronEnergy 125.02 ===>> OK
SetYSymmetry 38.07 ===>> OK
send trap current 250.0
GetParameter Trap Current Readback ===>> 248.830617103095
SetParameter Trap Current Set,250.0 ===>> OK
updating mftable name argon_2CDD
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon_2CDD.csv
============ MFtable ===========
Isotope  H2     AX(CDD)L2(CDD)
Ar40     3.7670 --- ---
Ar38     --- 3.7933 ---
Ar36     --- --- 3.7673
PHHCbs   --- 3.8084 ---
================================
get initial guess discrete
get initial guess discrete
get initial guess discrete
======== Configuration Finished ========
GetYSymmetry ===>> 38.07
Open N ===>> OK
GetZSymmetry ===>> 3.35
GetParameter Trap Current Readback ===>> 247.935542940853
GetHighVoltage ===>> 9900
load_hops ('hops/argon_2CDD.yaml',) {}
define_hops ([{'counts': 10, 'settle': 5, 'positioning': {'detector': 'H2', 'isotope': 'Ar40'}, 'cup_configuration': [{'protect': False, 'active': True, 'detector': 'H2', 'is_baseline': False, 'isotope': 'Ar40', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'H1', 'is_baseline': False, 'isotope': 'Ar39', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'L1', 'is_baseline': False, 'isotope': 'Ar37', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'L2(CDD)', 'is_baseline': False, 'isotope': 'Ar36', 'deflection': 0}]}, {'counts': 20, 'settle': 5, 'positioning': {'detector': 'AX(CDD)', 'isotope': 'Ar38', 'use_af_demag': False}, 'cup_configuration': [{'protect': False, 'active': True, 'detector': 'AX(CDD)', 'is_baseline': False, 'isotope': 'Ar38', 'deflection': 0}]}],) {}
GetIndicatorState N ===>> OK
change switch state (True, True)
set_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
No fit for "PHHCbs". defaulting to linear. check the measurement script "felix_peak_hop_argon_2CDD.py"
set "PHHCbs" to "linear"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "L2(CDD)" to "('average', 'SEM')"
18:57:50 -- OPEN   VALVE-N (Bone to Getter GP-50)
set "L1" to "('average', 'SEM')"
-------------------------- open None (Bone to Getter GP-50) result=[(True, True)]
set "H1" to "('average', 'SEM')"
set "AX(CDD)" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
peak_hop () {'ncycles': 10, 'hops': [{'counts': 10, 'settle': 5, 'positioning': {'detector': 'H2', 'isotope': 'Ar40'}, 'cup_configuration': [{'protect': False, 'active': True, 'detector': 'H2', 'is_baseline': False, 'isotope': 'Ar40', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'H1', 'is_baseline': False, 'isotope': 'Ar39', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'L1', 'is_baseline': False, 'isotope': 'Ar37', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'L2(CDD)', 'is_baseline': False, 'isotope': 'Ar36', 'deflection': 0}]}, {'counts': 20, 'settle': 5, 'positioning': {'detector': 'AX(CDD)', 'isotope': 'Ar38', 'use_af_demag': False}, 'cup_configuration': [{'protect': False, 'active': True, 'detector': 'AX(CDD)', 'is_baseline': False, 'isotope': 'Ar38', 'deflection': 0}]}]}
adding conditionals 
make new hop generatior
add group /signal/Ar40 (Group) u'' table H2
add group /signal/Ar39 (Group) u'' table H1
add group /signal/Ar37 (Group) u'' table L1
add group /signal/Ar36 (Group) u'' table L2(CDD)
add group /signal/Ar38 (Group) u'' table AX(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/41/103123-0778-4bea-a813-ead3316ae918.h5
measuring signal. ncounts=430.0
"signal" increment series count="2" fit count="1" regressing="True"
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Diode Laser'}
open name=--- desc=Bone to Diode Laser
checking ownership. requestor=192.168.2.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open B ===>> OK
GetIndicatorState B ===>> OK
change switch state (True, True)
18:57:50 -- OPEN   VALVE-B (Bone to Diode Laser)
-------------------------- open None (Bone to Diode Laser) result=[(True, True)]
starting measurement
measurement period (ms) = 1048.576
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H2', 'H1', 'L1', 'L2(CDD)']
Peak hop Deflections=[0, 0, 0, 0]
Peak hop DeflectionsPairs=[('H2', 0), ('H1', 0), ('L1', 0), ('L2(CDD)', 0)]
SetDeflection L2 (CDD),0.0 ===>> OK
----------------------- HOP Ar40 H2
detector Detector(H2)
POSITION Ar40 H2
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76705
GetHighVoltage ===>> 9900
positioning Ar40 (3.76705) on H2
setting magnet DAC
current  : 3.767050
requested: 3.767050
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
action=open, ok=True, locked=[False]
open () {'description': 'Bone to CO2 Laser'}
SetMagnetDAC 3.76705 ===>> OK
set_dac. change=False
open name=--- desc=Bone to CO2 Laser
update detector isotope pairing
checking ownership. requestor=192.168.2.137
detectors=['H2', 'H1', 'L1', 'L2(CDD)']
check software interlocks D
isotopes=['Ar40', 'Ar39', 'Ar37', 'Ar36']
interlocks []
updating pairing H2 - Ar40
updating pairing H1 - Ar39
actuate state mode=None-script, software_lock=False
updating pairing L1 - Ar37
doing actuation None-script open_channel True
updating pairing L2(CDD) - Ar36
Open D ===>> OK
GetIndicatorState D ===>> OK
change switch state (True, True)
18:57:51 -- OPEN   VALVE-D (Bone to CO2 Laser)
-------------------------- open None (Bone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('FelixCO2Flag',) {}
release FelixCO2Flag
Set FelixCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=4.69035291672
PumpBone.py completed successfully
gosub finished
get_resource_value () {'name': 'FelixMiniboneFlag'}
Read FelixMiniboneFlag ===>> 1
Get Resource Value FelixMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.47955322266e-05
get_resource_value () {'name': 'FelixMiniboneFlag'}
Read FelixMiniboneFlag ===>> 1
Get Resource Value FelixMiniboneFlag=1.0
Pump minibone
open () {'description': 'Bone to Minibone'}
open name=--- desc=Bone to Minibone
checking ownership. requestor=192.168.2.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open E ===>> OK
GetIndicatorState E ===>> OK
change switch state (True, True)
18:57:52 -- OPEN   VALVE-E (Bone to Minibone)
-------------------------- open None (Bone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=192.168.2.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
18:57:52 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=192.168.2.137
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
18:57:53 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=192.168.2.137
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
GetIndicatorState I ===>> False
change switch state (True, True)
18:57:54 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
release ('FelixMiniboneFlag',) {}
release FelixMiniboneFlag
Set FelixMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=0, duration=2.11975002289
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=6.85815906525
felix_pump_extraction_line.py completed successfully
Post Equilibration Finished
18:57:54 -- ******* Post Equilibration Finished *******
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX(CDD)']
Peak hop Deflections=[0]
Peak hop DeflectionsPairs=[('AX(CDD)', 0)]
SetDeflection AX (CDD),0.0 ===>> OK
----------------------- HOP Ar38 AX(CDD)
detector Detector(AX(CDD))
POSITION Ar38 AX(CDD)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
AX(CDD) map mass to dac 37.9627 >> 3.79328
GetDeflection AX (CDD) ===>> 0
GetHighVoltage ===>> 9900
positioning Ar38 (3.79328) on AX(CDD)
setting magnet DAC
current  : 3.767050
requested: 3.793280
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.79328 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX(CDD)']
isotopes=['Ar38']
updating pairing AX(CDD) - Ar38
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[  1.52795465e-04   0.00000000e+00  -2.27637459e-01  -3.24826029e-02
  -1.46761358e-01  -1.13321536e+00]
prev_signals=[  1.52795465e-04   0.00000000e+00  -2.27637459e-01  -3.24826029e-02
  -1.46761358e-01  -1.13321536e+00]
resetting no_intensity_change_cnt
signals=[  3.05590948e-04   0.00000000e+00  -1.75552539e-01  -7.69872231e-02
  -2.01580923e-02  -7.35906730e-01]
prev_signals=[  1.52795465e-04   0.00000000e+00  -2.27637459e-01  -3.24826029e-02
  -1.46761358e-01  -1.13321536e+00]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H2', 'H1', 'L1', 'L2(CDD)']
Peak hop Deflections=[0, 0, 0, 0]
Peak hop DeflectionsPairs=[('H2', 0), ('H1', 0), ('L1', 0), ('L2(CDD)', 0)]
SetDeflection L2 (CDD),0.0 ===>> OK
----------------------- HOP Ar40 H2
detector Detector(H2)
POSITION Ar40 H2
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76705
GetHighVoltage ===>> 9900
positioning Ar40 (3.76705) on H2
setting magnet DAC
current  : 3.793280
requested: 3.767050
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.76705 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H2', 'H1', 'L1', 'L2(CDD)']
isotopes=['Ar40', 'Ar39', 'Ar37', 'Ar36']
updating pairing H2 - Ar40
updating pairing H1 - Ar39
updating pairing L1 - Ar37
updating pairing L2(CDD) - Ar36
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[ 0.          0.0020843   0.50681797 -0.05409939 -0.33422745 -0.65404664]
prev_signals=[ 0.          0.0020843   0.50681797 -0.05409939 -0.33422745 -0.65404664]
resetting no_intensity_change_cnt
signals=[ 0.          0.00320662  0.62914477 -0.13073684  0.04200287 -0.81995024]
prev_signals=[ 0.          0.0020843   0.50681797 -0.05409939 -0.33422745 -0.65404664]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX(CDD)']
Peak hop Deflections=[0]
Peak hop DeflectionsPairs=[('AX(CDD)', 0)]
SetDeflection AX (CDD),0.0 ===>> OK
----------------------- HOP Ar38 AX(CDD)
detector Detector(AX(CDD))
POSITION Ar38 AX(CDD)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
AX(CDD) map mass to dac 37.9627 >> 3.79328
GetDeflection AX (CDD) ===>> 0
GetHighVoltage ===>> 9900
positioning Ar38 (3.79328) on AX(CDD)
setting magnet DAC
current  : 3.767050
requested: 3.793280
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.79328 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX(CDD)']
isotopes=['Ar38']
updating pairing AX(CDD) - Ar38
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[ 0.          0.          0.0443533  -0.02808983 -0.20386499 -0.95182273]
prev_signals=[ 0.          0.          0.0443533  -0.02808983 -0.20386499 -0.95182273]
resetting no_intensity_change_cnt
signals=[  4.58386448e-04   0.00000000e+00   3.20266964e-01  -1.89106697e-01
  -1.22336481e-01  -9.63925511e-01]
prev_signals=[ 0.          0.          0.0443533  -0.02808983 -0.20386499 -0.95182273]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
18:58:56 -- collecting point 50
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H2', 'H1', 'L1', 'L2(CDD)']
Peak hop Deflections=[0, 0, 0, 0]
Peak hop DeflectionsPairs=[('H2', 0), ('H1', 0), ('L1', 0), ('L2(CDD)', 0)]
SetDeflection L2 (CDD),0.0 ===>> OK
----------------------- HOP Ar40 H2
detector Detector(H2)
POSITION Ar40 H2
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76705
GetHighVoltage ===>> 9900
positioning Ar40 (3.76705) on H2
setting magnet DAC
current  : 3.793280
requested: 3.767050
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.76705 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H2', 'H1', 'L1', 'L2(CDD)']
isotopes=['Ar40', 'Ar39', 'Ar37', 'Ar36']
updating pairing H2 - Ar40
updating pairing H1 - Ar39
updating pairing L1 - Ar37
updating pairing L2(CDD) - Ar36
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[ 0.          0.0025653   0.475918   -0.16703059 -0.08392051 -1.05163734]
prev_signals=[ 0.          0.0025653   0.475918   -0.16703059 -0.08392051 -1.05163734]
resetting no_intensity_change_cnt
signals=[ 0.          0.00240497  0.63136056  0.02404699 -0.02187836 -1.04645092]
prev_signals=[ 0.          0.0025653   0.475918   -0.16703059 -0.08392051 -1.05163734]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX(CDD)']
Peak hop Deflections=[0]
Peak hop DeflectionsPairs=[('AX(CDD)', 0)]
SetDeflection AX (CDD),0.0 ===>> OK
----------------------- HOP Ar38 AX(CDD)
detector Detector(AX(CDD))
POSITION Ar38 AX(CDD)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
AX(CDD) map mass to dac 37.9627 >> 3.79328
GetDeflection AX (CDD) ===>> 0
GetHighVoltage ===>> 9900
positioning Ar38 (3.79328) on AX(CDD)
setting magnet DAC
current  : 3.767050
requested: 3.793280
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.79328 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX(CDD)']
isotopes=['Ar38']
updating pairing AX(CDD) - Ar38
Join finished
delaying 5 for detectors to settle after peak hop
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H2', 'H1', 'L1', 'L2(CDD)']
Peak hop Deflections=[0, 0, 0, 0]
Peak hop DeflectionsPairs=[('H2', 0), ('H1', 0), ('L1', 0), ('L2(CDD)', 0)]
SetDeflection L2 (CDD),0.0 ===>> OK
----------------------- HOP Ar40 H2
detector Detector(H2)
POSITION Ar40 H2
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76705
GetHighVoltage ===>> 9900
positioning Ar40 (3.76705) on H2
setting magnet DAC
current  : 3.793280
requested: 3.767050
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.76705 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H2', 'H1', 'L1', 'L2(CDD)']
isotopes=['Ar40', 'Ar39', 'Ar37', 'Ar36']
updating pairing H2 - Ar40
updating pairing H1 - Ar39
updating pairing L1 - Ar37
updating pairing L2(CDD) - Ar36
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[ 0.          0.00224463  0.86311261 -0.13189271  0.01608286 -0.8699809 ]
prev_signals=[ 0.          0.00224463  0.86311261 -0.13189271  0.01608286 -0.8699809 ]
resetting no_intensity_change_cnt
signals=[  1.52795465e-04   4.00827727e-03   8.15288117e-01  -3.41009885e-02
  -1.60292244e-01  -8.05655286e-01]
prev_signals=[ 0.          0.00224463  0.86311261 -0.13189271  0.01608286 -0.8699809 ]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
19:00:03 -- collecting point 100
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX(CDD)']
Peak hop Deflections=[0]
Peak hop DeflectionsPairs=[('AX(CDD)', 0)]
SetDeflection AX (CDD),0.0 ===>> OK
----------------------- HOP Ar38 AX(CDD)
detector Detector(AX(CDD))
POSITION Ar38 AX(CDD)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
AX(CDD) map mass to dac 37.9627 >> 3.79328
GetDeflection AX (CDD) ===>> 0
GetHighVoltage ===>> 9900
positioning Ar38 (3.79328) on AX(CDD)
setting magnet DAC
current  : 3.767050
requested: 3.793280
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.79328 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX(CDD)']
isotopes=['Ar38']
updating pairing AX(CDD) - Ar38
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[  3.05590948e-04   0.00000000e+00   1.60319722e-02   1.15730868e-03
   8.47838664e-02  -1.05359664e+00]
prev_signals=[  3.05590948e-04   0.00000000e+00   1.60319722e-02   1.15730868e-03
   8.47838664e-02  -1.05359664e+00]
resetting no_intensity_change_cnt
signals=[ 0.          0.          0.15065303 -0.16495009 -0.0313971  -0.75446841]
prev_signals=[  3.05590948e-04   0.00000000e+00   1.60319722e-02   1.15730868e-03
   8.47838664e-02  -1.05359664e+00]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H2', 'H1', 'L1', 'L2(CDD)']
Peak hop Deflections=[0, 0, 0, 0]
Peak hop DeflectionsPairs=[('H2', 0), ('H1', 0), ('L1', 0), ('L2(CDD)', 0)]
SetDeflection L2 (CDD),0.0 ===>> OK
----------------------- HOP Ar40 H2
detector Detector(H2)
POSITION Ar40 H2
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76705
GetHighVoltage ===>> 9900
positioning Ar40 (3.76705) on H2
setting magnet DAC
current  : 3.793280
requested: 3.767050
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.76705 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H2', 'H1', 'L1', 'L2(CDD)']
isotopes=['Ar40', 'Ar39', 'Ar37', 'Ar36']
updating pairing H2 - Ar40
updating pairing H1 - Ar39
updating pairing L1 - Ar37
updating pairing L2(CDD) - Ar36
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[ 0.          0.00320662  0.97481437 -0.17454346 -0.06201699 -1.03515596]
prev_signals=[ 0.          0.00320662  0.97481437 -0.17454346 -0.06201699 -1.03515596]
resetting no_intensity_change_cnt
signals=[ 0.          0.00400828  0.99812462  0.04000072 -0.06293443 -0.91436078]
prev_signals=[ 0.          0.00320662  0.97481437 -0.17454346 -0.06201699 -1.03515596]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX(CDD)']
Peak hop Deflections=[0]
Peak hop DeflectionsPairs=[('AX(CDD)', 0)]
SetDeflection AX (CDD),0.0 ===>> OK
----------------------- HOP Ar38 AX(CDD)
detector Detector(AX(CDD))
POSITION Ar38 AX(CDD)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
AX(CDD) map mass to dac 37.9627 >> 3.79328
GetDeflection AX (CDD) ===>> 0
GetHighVoltage ===>> 9900
positioning Ar38 (3.79328) on AX(CDD)
setting magnet DAC
current  : 3.767050
requested: 3.793280
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.79328 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX(CDD)']
isotopes=['Ar38']
updating pairing AX(CDD) - Ar38
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[  4.58386448e-04   0.00000000e+00   1.21512699e-01  -6.82020572e-02
  -3.78365536e-01  -1.05163734e+00]
prev_signals=[  4.58386448e-04   0.00000000e+00   1.21512699e-01  -6.82020572e-02
  -3.78365536e-01  -1.05163734e+00]
resetting no_intensity_change_cnt
signals=[  6.11181966e-04   0.00000000e+00   2.41926151e-01  -3.47945815e-02
   2.90427785e-02  -8.06346982e-01]
prev_signals=[  4.58386448e-04   0.00000000e+00   1.21512699e-01  -6.82020572e-02
  -3.78365536e-01  -1.05163734e+00]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
19:01:10 -- collecting point 150
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H2', 'H1', 'L1', 'L2(CDD)']
Peak hop Deflections=[0, 0, 0, 0]
Peak hop DeflectionsPairs=[('H2', 0), ('H1', 0), ('L1', 0), ('L2(CDD)', 0)]
SetDeflection L2 (CDD),0.0 ===>> OK
----------------------- HOP Ar40 H2
detector Detector(H2)
POSITION Ar40 H2
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76705
GetHighVoltage ===>> 9900
positioning Ar40 (3.76705) on H2
setting magnet DAC
current  : 3.793280
requested: 3.767050
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.76705 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H2', 'H1', 'L1', 'L2(CDD)']
isotopes=['Ar40', 'Ar39', 'Ar37', 'Ar36']
updating pairing H2 - Ar40
updating pairing H1 - Ar39
updating pairing L1 - Ar37
updating pairing L2(CDD) - Ar36
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[ 0.          0.00304629  1.10349387 -0.03860933  0.0554219  -0.73636789]
prev_signals=[ 0.          0.00304629  1.10349387 -0.03860933  0.0554219  -0.73636789]
resetting no_intensity_change_cnt
signals=[ 0.          0.00272563  1.13333501 -0.14957739 -0.04733791 -0.80369548]
prev_signals=[ 0.          0.00304629  1.10349387 -0.03860933  0.0554219  -0.73636789]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX(CDD)']
Peak hop Deflections=[0]
Peak hop DeflectionsPairs=[('AX(CDD)', 0)]
SetDeflection AX (CDD),0.0 ===>> OK
----------------------- HOP Ar38 AX(CDD)
detector Detector(AX(CDD))
POSITION Ar38 AX(CDD)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
AX(CDD) map mass to dac 37.9627 >> 3.79328
GetDeflection AX (CDD) ===>> 0
GetHighVoltage ===>> 9900
positioning Ar38 (3.79328) on AX(CDD)
setting magnet DAC
current  : 3.767050
requested: 3.793280
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.79328 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX(CDD)']
isotopes=['Ar38']
updating pairing AX(CDD) - Ar38
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[ 0.00091677  0.         -0.08139647  0.07190897 -0.16430561 -0.71838234]
prev_signals=[ 0.00091677  0.         -0.08139647  0.07190897 -0.16430561 -0.71838234]
resetting no_intensity_change_cnt
signals=[  4.58386448e-04   0.00000000e+00   1.40745218e-01   4.71684231e-02
  -3.32851690e-01  -6.84946757e-01]
prev_signals=[ 0.00091677  0.         -0.08139647  0.07190897 -0.16430561 -0.71838234]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H2', 'H1', 'L1', 'L2(CDD)']
Peak hop Deflections=[0, 0, 0, 0]
Peak hop DeflectionsPairs=[('H2', 0), ('H1', 0), ('L1', 0), ('L2(CDD)', 0)]
SetDeflection L2 (CDD),0.0 ===>> OK
----------------------- HOP Ar40 H2
detector Detector(H2)
POSITION Ar40 H2
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76705
GetHighVoltage ===>> 9900
positioning Ar40 (3.76705) on H2
setting magnet DAC
current  : 3.793280
requested: 3.767050
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.76705 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H2', 'H1', 'L1', 'L2(CDD)']
isotopes=['Ar40', 'Ar39', 'Ar37', 'Ar36']
updating pairing H2 - Ar40
updating pairing H1 - Ar39
updating pairing L1 - Ar37
updating pairing L2(CDD) - Ar36
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[ 0.          0.00288596  1.16795654  0.11040836 -0.23619928 -1.04241702]
prev_signals=[ 0.          0.00288596  1.16795654  0.11040836 -0.23619928 -1.04241702]
resetting no_intensity_change_cnt
signals=[ 0.          0.00272563  1.22041573 -0.08080181 -0.1121306  -0.63456062]
prev_signals=[ 0.          0.00288596  1.16795654  0.11040836 -0.23619928 -1.04241702]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX(CDD)']
Peak hop Deflections=[0]
Peak hop DeflectionsPairs=[('AX(CDD)', 0)]
SetDeflection AX (CDD),0.0 ===>> OK
----------------------- HOP Ar38 AX(CDD)
detector Detector(AX(CDD))
POSITION Ar38 AX(CDD)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
AX(CDD) map mass to dac 37.9627 >> 3.79328
GetDeflection AX (CDD) ===>> 0
GetHighVoltage ===>> 9900
positioning Ar38 (3.79328) on AX(CDD)
setting magnet DAC
current  : 3.767050
requested: 3.793280
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.79328 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX(CDD)']
isotopes=['Ar38']
updating pairing AX(CDD) - Ar38
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[  6.11181966e-04   0.00000000e+00   5.95049712e-02   5.98854476e-02
  -2.35740645e-01  -7.44207648e-01]
prev_signals=[  6.11181966e-04   0.00000000e+00   5.95049712e-02   5.98854476e-02
  -2.35740645e-01  -7.44207648e-01]
resetting no_intensity_change_cnt
signals=[ 0.00152796  0.         -0.01706682  0.09399102  0.12102877 -0.83655056]
prev_signals=[  6.11181966e-04   0.00000000e+00   5.95049712e-02   5.98854476e-02
  -2.35740645e-01  -7.44207648e-01]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
19:02:22 -- collecting point 200
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H2', 'H1', 'L1', 'L2(CDD)']
Peak hop Deflections=[0, 0, 0, 0]
Peak hop DeflectionsPairs=[('H2', 0), ('H1', 0), ('L1', 0), ('L2(CDD)', 0)]
SetDeflection L2 (CDD),0.0 ===>> OK
----------------------- HOP Ar40 H2
detector Detector(H2)
POSITION Ar40 H2
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76705
GetHighVoltage ===>> 9900
positioning Ar40 (3.76705) on H2
setting magnet DAC
current  : 3.793280
requested: 3.767050
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.76705 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H2', 'H1', 'L1', 'L2(CDD)']
isotopes=['Ar40', 'Ar39', 'Ar37', 'Ar36']
updating pairing H2 - Ar40
updating pairing H1 - Ar39
updating pairing L1 - Ar37
updating pairing L2(CDD) - Ar36
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[ 0.          0.00272563  1.36440152 -0.00647246 -0.00708398 -0.74305475]
prev_signals=[ 0.          0.00272563  1.36440152 -0.00647246 -0.00708398 -0.74305475]
resetting no_intensity_change_cnt
signals=[ 0.          0.0046496   1.18241168  0.13029454 -0.01006581 -0.83816447]
prev_signals=[ 0.          0.00272563  1.36440152 -0.00647246 -0.00708398 -0.74305475]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
no intensity change cnt= 0
signals=[ 0.          0.00432894  1.46479605 -0.11779096  0.00713719 -0.79136012]
prev_signals=[ 0.          0.00432894  1.46479605 -0.11779096  0.00713719 -0.79136012]
resetting no_intensity_change_cnt
signals=[ 0.          0.00320662  1.39681582  0.44193632  0.03477731 -0.60953952]
prev_signals=[ 0.          0.00432894  1.46479605 -0.11779096  0.00713719 -0.79136012]
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX(CDD)']
Peak hop Deflections=[0]
Peak hop DeflectionsPairs=[('AX(CDD)', 0)]
SetDeflection AX (CDD),0.0 ===>> OK
----------------------- HOP Ar38 AX(CDD)
detector Detector(AX(CDD))
POSITION Ar38 AX(CDD)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
AX(CDD) map mass to dac 37.9627 >> 3.79328
GetDeflection AX (CDD) ===>> 0
GetHighVoltage ===>> 9900
positioning Ar38 (3.79328) on AX(CDD)
setting magnet DAC
current  : 3.767050
requested: 3.793280
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.79328 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX(CDD)']
isotopes=['Ar38']
updating pairing AX(CDD) - Ar38
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[ 0.00106957  0.          0.05088015  0.11433932 -0.07268212 -0.66038816]
prev_signals=[ 0.00106957  0.          0.05088015  0.11433932 -0.07268212 -0.66038816]
resetting no_intensity_change_cnt
signals=[ 0.00076398  0.          0.02850258 -0.12056509  0.0520958  -0.70466236]
prev_signals=[ 0.00106957  0.          0.05088015  0.11433932 -0.07268212 -0.66038816]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H2', 'H1', 'L1', 'L2(CDD)']
Peak hop Deflections=[0, 0, 0, 0]
Peak hop DeflectionsPairs=[('H2', 0), ('H1', 0), ('L1', 0), ('L2(CDD)', 0)]
SetDeflection L2 (CDD),0.0 ===>> OK
----------------------- HOP Ar40 H2
detector Detector(H2)
POSITION Ar40 H2
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76705
GetHighVoltage ===>> 9900
positioning Ar40 (3.76705) on H2
setting magnet DAC
current  : 3.793280
requested: 3.767050
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.76705 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H2', 'H1', 'L1', 'L2(CDD)']
isotopes=['Ar40', 'Ar39', 'Ar37', 'Ar36']
updating pairing H2 - Ar40
updating pairing H1 - Ar39
updating pairing L1 - Ar37
updating pairing L2(CDD) - Ar36
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[ 0.          0.00400828  1.47214239  0.08728542 -0.11499743 -0.6274118 ]
prev_signals=[ 0.          0.00400828  1.47214239  0.08728542 -0.11499743 -0.6274118 ]
resetting no_intensity_change_cnt
signals=[ 0.          0.00561159  1.79263665  0.12381992 -0.11362135 -0.85384226]
prev_signals=[ 0.          0.00400828  1.47214239  0.08728542 -0.11499743 -0.6274118 ]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
19:03:29 -- collecting point 250
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX(CDD)']
Peak hop Deflections=[0]
Peak hop DeflectionsPairs=[('AX(CDD)', 0)]
SetDeflection AX (CDD),0.0 ===>> OK
----------------------- HOP Ar38 AX(CDD)
detector Detector(AX(CDD))
POSITION Ar38 AX(CDD)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
AX(CDD) map mass to dac 37.9627 >> 3.79328
GetDeflection AX (CDD) ===>> 0
GetHighVoltage ===>> 9900
positioning Ar38 (3.79328) on AX(CDD)
setting magnet DAC
current  : 3.767050
requested: 3.793280
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.79328 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX(CDD)']
isotopes=['Ar38']
updating pairing AX(CDD) - Ar38
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[  7.63977502e-04   0.00000000e+00   1.91800648e-01  -2.48050915e-01
  -2.56952277e-01  -8.55801968e-01]
prev_signals=[  7.63977502e-04   0.00000000e+00   1.91800648e-01  -2.48050915e-01
  -2.56952277e-01  -8.55801968e-01]
resetting no_intensity_change_cnt
signals=[  7.63977502e-04   0.00000000e+00  -6.41490806e-02   1.50065493e-01
  -1.95035936e-01  -8.51651996e-01]
prev_signals=[  7.63977502e-04   0.00000000e+00   1.91800648e-01  -2.48050915e-01
  -2.56952277e-01  -8.55801968e-01]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H2', 'H1', 'L1', 'L2(CDD)']
Peak hop Deflections=[0, 0, 0, 0]
Peak hop DeflectionsPairs=[('H2', 0), ('H1', 0), ('L1', 0), ('L2(CDD)', 0)]
SetDeflection L2 (CDD),0.0 ===>> OK
----------------------- HOP Ar40 H2
detector Detector(H2)
POSITION Ar40 H2
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76705
GetHighVoltage ===>> 9900
positioning Ar40 (3.76705) on H2
setting magnet DAC
current  : 3.793280
requested: 3.767050
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.76705 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H2', 'H1', 'L1', 'L2(CDD)']
isotopes=['Ar40', 'Ar39', 'Ar37', 'Ar36']
updating pairing H2 - Ar40
updating pairing H1 - Ar39
updating pairing L1 - Ar37
updating pairing L2(CDD) - Ar36
Join finished
delaying 5 for detectors to settle after peak hop
no intensity change cnt= 0
signals=[ 0.          0.00448927  1.60147042 -0.08230452 -0.03827806 -0.56583753]
prev_signals=[ 0.          0.00448927  1.60147042 -0.08230452 -0.03827806 -0.56583753]
resetting no_intensity_change_cnt
signals=[ 0.          0.00448927  1.51388934 -0.02566223  0.01241283 -0.88392908]
prev_signals=[ 0.          0.00448927  1.60147042 -0.08230452 -0.03827806 -0.56583753]
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX(CDD)']
Peak hop Deflections=[0]
Peak hop DeflectionsPairs=[('AX(CDD)', 0)]
SetDeflection AX (CDD),0.0 ===>> OK
----------------------- HOP Ar38 AX(CDD)
detector Detector(AX(CDD))
POSITION Ar38 AX(CDD)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
AX(CDD) map mass to dac 37.9627 >> 3.79328
GetDeflection AX (CDD) ===>> 0
GetHighVoltage ===>> 9900
positioning Ar38 (3.79328) on AX(CDD)
setting magnet DAC
current  : 3.767050
requested: 3.793280
Delta Dac: 0.026230
Checking detector protection. dv=0.02623
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.79328 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX(CDD)']
isotopes=['Ar38']
updating pairing AX(CDD) - Ar38
Join finished
delaying 5 for detectors to settle after peak hop
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
19:04:36 -- collecting point 300
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
waiting for write to finish
measurement finished
estimated time: 450.888 actual time: :406.757
flush and close file /Users/obama/PychronDev/data/isotopes/41/103123-0778-4bea-a813-ead3316ae918.h5
set_deflection ('H2 (CDD)', 0) {}
setting spectrometer parameter SetDeflection H2 (CDD),0
SetDeflection H2 (CDD),0 ===>> OK
set_deflection ('H1 (CDD)', 0) {}
setting spectrometer parameter SetDeflection H1 (CDD),0
SetDeflection H1 (CDD),0 ===>> OK
set_deflection ('AX (CDD)', 0) {}
setting spectrometer parameter SetDeflection AX (CDD),0
SetDeflection AX (CDD),0 ===>> OK
set_deflection ('L1 (CDD)', 0) {}
setting spectrometer parameter SetDeflection L1 (CDD),0
SetDeflection L1 (CDD),0 ===>> OK
set_deflection ('L2 (CDD)', 0) {}
setting spectrometer parameter SetDeflection L2 (CDD),0
SetDeflection L2 (CDD),0 ===>> OK
define_detectors ('Ar40', 'AX(CDD)') {}
molweights={'PHHCl': 38.13021421, 'Ar40': 39.9624, 'PM41': 41.0, 'Ar35': 35.0, 'Ar36': 35.9675, 'Ar37': 36.9668, 'PHHCbs': 38.9016474, 'Ar38': 37.9627, 'Ar39': 38.964, 'PM42': 42.0}
setting detector H2 to PM42 (42.0624)
setting detector H1 to PM41 (40.9624)
setting detector AX to Ar40 (40.0624)
setting detector L1 to Ar39 (39.0624)
setting detector L2 to Ar38 (37.9624)
setting detector H2(CDD) to PM42 (41.9624)
setting detector H1(CDD) to PM41 (40.9624)
setting detector AX(CDD) to Ar40 (39.9624)
setting detector L1(CDD) to PHHCbs (38.9624)
setting detector L2(CDD) to PHHCl (38.0624)
baselines () {'settling_time': 15.0, 'detector': 'AX(CDD)', 'mass': 'PHHCbs', 'ncounts': 120, 'use_dac': False}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX(CDD)), Detector(L1), Detector(L2(CDD))]
add group baseline table H2
add group baseline table H1
add group baseline table AX(CDD)
add group baseline table L1
add group baseline table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/41/103123-0778-4bea-a813-ead3316ae918.h5
detector Detector(AX(CDD))
POSITION PHHCbs AX(CDD)
molweights={'PHHCl': 38.13021421, 'Ar40': 39.9624, 'PM41': 41.0, 'Ar35': 35.0, 'Ar36': 35.9675, 'Ar37': 36.9668, 'PHHCbs': 38.9016474, 'Ar38': 37.9627, 'Ar39': 38.964, 'PM42': 42.0}
setting detector H2 to PM41 (41.0016474)
setting detector H1 to Ar40 (39.9016474)
setting detector AX to PHHCbs (39.0016474)
setting detector L1 to PHHCl (38.0016474)
setting detector L2 to Ar37 (36.9016474)
setting detector H2(CDD) to PM41 (40.9016474)
setting detector H1(CDD) to Ar40 (39.9016474)
setting detector AX(CDD) to PHHCbs (38.9016474)
setting detector L1(CDD) to Ar38 (37.9016474)
setting detector L2(CDD) to Ar37 (37.0016474)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
AX(CDD) map mass to dac 38.9016474 >> 3.80836
GetDeflection AX (CDD) ===>> 0
GetHighVoltage ===>> 9900
positioning PHHCbs (3.80836) on AX(CDD)
setting magnet DAC
current  : 3.793280
requested: 3.808360
Delta Dac: 0.015080
Checking detector protection. dv=0.01508
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.80836 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
measurement period (ms) = 1048.576
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
19:05:19 -- collecting point 25
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
19:05:45 -- collecting point 50
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
19:06:11 -- collecting point 75
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
19:06:38 -- collecting point 100
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.548
flush and close file /Users/obama/PychronDev/data/isotopes/41/103123-0778-4bea-a813-ead3316ae918.h5
activate_detectors ('H2', 'L2(CDD)') {'peak_center': True}
peak_center () {'detector': 'H2', 'integration_time': 0.524288, 'isotope': 'Ar40'}
peak center: mean=1.60949512134 threshold=10.0
Skipping peak center. intensities to small. 1.60949512134<10.0
finished measure script
executed snippet estimated_duration=171.0, duration=586.909801006
felix_peak_hop_argon_2CDD.py completed successfully
Measurement Finished
19:07:00 -- ******* Measurement Finished *******
Post Measurement Started felix_pump_ms.py
19:07:00 -- ******* Post Measurement Started felix_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.21865081787e-05
Pumping spectrometer
open () {'name': 'V'}
open name=V desc=---
checking ownership. requestor=192.168.2.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open V ===>> OK
GetIndicatorState V ===>> OK
change switch state (True, True)
19:07:00 -- OPEN   VALVE-V (Felix Ion Pump)
-------------------------- open V () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.375869989395
felix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
19:07:00 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for L2(CDD)= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for PHHCbs= {'filter_outliers': False, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for AX(CDD)= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://felixexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-10-17T19:06:14',
                    'title': 'iServer Hum.',
                    'value': 27.6}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-10-17T19:05:02',
                     'title': None,
                     'value': 86.475},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-10-17T19:05:03',
                     'title': None,
                     'value': 87.37534}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-10-17T16:59:58',
                       'title': None,
                       'value': 73.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-10-17T18:51:07',
                       'title': 'iServer Temp.',
                       'value': 73.7},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-10-17T18:29:09',
                       'title': None,
                       'value': 18.0}]}
persistence save...
persistence save - db
post measurement save
5363376048 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 5363376048
close session 5363376048
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4974927024
MassSpec Database Version: 16.0
close session 4974927024
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to ba-01-F
setting aliquot to 932
setting step to 
setting uuid to 41103123-0778-4bea-a813-ead3316ae918
setting irradpos to ba-01-F
setting extract_device to Extract Device
setting tray to ---
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_air
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Felix
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
no row found for RunScriptTable ('RunScriptID',) (-964682694,)
Reference Isotope=Ar40
Reference Detector=H2
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar40 H2
add baseline dbdet= Ar40. original det= H2
get baseline data Ar40 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x1431ae290> len t=120
baseline Ar40. v=0.0200773030384, e=0.00896951520778
get signal data Ar40 H2
Get data signal Ar40 0.236+/-0.027 len t=100
adding isotope Ar39 H1
add baseline dbdet= Ar39. original det= H1
get baseline data Ar39 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x142655050> len t=240
baseline Ar39. v=-0.029116752134, e=0.0084451749448
get signal data Ar39 H1
Get data signal Ar39 -0.06+/-0.04 len t=100
adding isotope Ar38 AX(CDD)
add baseline dbdet= Ar38. original det= AX(CDD)
get baseline data Ar38 AX(CDD)
Get data baseline <pychron.processing.isotope.Baseline object at 0x1431ae990> len t=120
baseline Ar38. v=0.0, e=0.0
get signal data Ar38 AX(CDD)
Get data signal Ar38 0.000166+/-0.000031 len t=200
adding isotope Ar37 L1
add baseline dbdet= Ar37. original det= L1
get baseline data Ar37 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x1431ae390> len t=120
baseline Ar37. v=-0.825283187423, e=0.0108095755273
get signal data Ar37 L1
Get data signal Ar37 0.004+/-0.029 len t=100
adding isotope Ar36 L2(CDD)
add baseline dbdet= Ar36. original det= L2(CDD)
get baseline data Ar36 L2(CDD)
Get data baseline <pychron.processing.isotope.Baseline object at 0x1431ae0d0> len t=120
baseline Ar36. v=0.0, e=0.0
get signal data Ar36 L2(CDD)
Get data signal Ar36 0.00093+/-0.00023 len t=100
adding isotope PHHCbs H1
get signal data PHHCbs H1
Get data signal PHHCbs 0.219765999967+/-0 len t=0
ba-01-F-932 added analysis time 0.524864196777s
analysis added to mass spec database
mass spec save time= 0.567
persistence save - dvc
================= post measurement started
create new session 4682368016
close session 4682368016
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Popen(['git', 'fetch', 'origin'], cwd=/Users/obama/PychronDev/data/.dvc/repositories/FractionatedRes, universal_newlines=False, shell=None)
Popen(['git', 'status', '-sb'], cwd=/Users/obama/PychronDev/data/.dvc/repositories/FractionatedRes, universal_newlines=False, shell=None)
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - 0f9c1e0258f0d38588e24429745d87935d8ebc65.json
add to repo msg=modified - -F-932.json
add to repo msg=modified - -F-932.dat.json
add to repo msg=modified - -F-932.blan.json
add to repo msg=modified - -F-932.inte.json
add to repo msg=modified - -F-932.icfa.json
add to repo msg=modified - -F-932.base.json
not at valid file /Users/obama/PychronDev/data/.dvc/repositories/FractionatedRes/ba-01/tags/-F-932.tags.json
add to repo msg=modified - -F-932.peak.json
add to repo msg=modified - -F-932.extr.json
not at valid file /Users/obama/PychronDev/data/.dvc/repositories/FractionatedRes/ba-01/monitor/-F-932.moni.json
commit message=<COLLECTION>
Popen(['git', 'cat-file', '--batch-check'], cwd=/Users/obama/PychronDev/data/.dvc/repositories/FractionatedRes, universal_newlines=False, shell=None)
Popen(['git', 'cat-file', '--batch'], cwd=/Users/obama/PychronDev/data/.dvc/repositories/FractionatedRes, universal_newlines=False, shell=None)
add to repo msg=modified - -F-932.inte.json
add to repo msg=modified - -F-932.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -F-932.blan.json
commit message=<BLANKS> preceding ba-01-F-931
add to repo msg=modified - -F-932.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x13fa63470>
pushing to remote=origin, url=https://github.com
Popen(['git', 'push', 'origin', 'master'], cwd=/Users/obama/PychronDev/data/.dvc/repositories/FractionatedRes, universal_newlines=False, shell=None)
Popen(['git', 'fetch', 'origin'], cwd=/Users/obama/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
Popen(['git', 'status', '-sb'], cwd=/Users/obama/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
Popen(['git', 'diff', 'HEAD', '--name-only'], cwd=/Users/obama/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
no changes to meta repo
Popen(['git', 'push', 'origin', 'master'], cwd=/Users/obama/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
create new session 4682368016
no row found for LoadTbl ('name',) ('',)
add_item exception <pychron.dvc.dvc_orm.LoadTbl object at 0x141a7b350> Traceback (most recent call last):
  File "/Users/obama/.pychron.1/updates/pychron/database/core/database_adapter.py", line 536, in _add_item
    sess.flush()
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/orm/session.py", line 1903, in flush
    self._flush(objects)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/orm/session.py", line 2021, in _flush
    transaction.rollback(_capture_exception=True)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.py", line 57, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/orm/session.py", line 1985, in _flush
    flush_context.execute()
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/orm/unitofwork.py", line 370, in execute
    rec.execute(self)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/orm/unitofwork.py", line 523, in execute
    uow
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/orm/persistence.py", line 64, in save_obj
    mapper, table, insert)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/orm/persistence.py", line 562, in _emit_insert_statements
    execute(statement, multiparams)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 720, in execute
    return meth(self, multiparams, params)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/sql/elements.py", line 317, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 817, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 947, in _execute_context
    context)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1108, in _handle_dbapi_exception
    exc_info
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/util/compat.py", line 185, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 940, in _execute_context
    context)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/sqlalchemy/engine/default.py", line 435, in do_execute
    cursor.execute(statement, parameters)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/pymysql/cursors.py", line 146, in execute
    result = self._query(query)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/pymysql/cursors.py", line 296, in _query
    conn.query(q)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/pymysql/connections.py", line 781, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/pymysql/connections.py", line 942, in _read_query_result
    result.read()
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/pymysql/connections.py", line 1138, in read
    first_packet = self.connection._read_packet()
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/pymysql/connections.py", line 906, in _read_packet
    packet.check_error()
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/pymysql/connections.py", line 367, in check_error
    err.raise_mysql_exception(self._data)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/pymysql/err.py", line 120, in raise_mysql_exception
    _check_mysql_exception(errinfo)
  File "/anaconda2/envs/pychron/lib/python2.7/site-packages/pymysql/err.py", line 112, in _check_mysql_exception
    raise errorclass(errno, errorvalue)
IntegrityError: (IntegrityError) (1452, u'Cannot add or update a child row: a foreign key constraint fails (`pychrondvc`.`LoadTbl`, CONSTRAINT `LoadTbl_ibfk_1` FOREIGN KEY (`holderName`) REFERENCES `LoadHolderTbl` (`name`))') 'INSERT INTO `LoadTbl` (name, create_date, archived, `holderName`) VALUES (%s, now(), %s, %s)' ('', 0, '---')

add association FractionatedRes
get identifier "ba-01-F"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x1427a7810>
close session 4682368016
================= post measurement finished
19:07:10 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
19:07:10 -- ******* Post Run Check Passed *******
19:07:10 -- Automated run ba-01-F-932 success duration: 823.995 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=13
update duration runid=ba-01-F-932, duration=823.995375156, md5=70720d8b
adding ba-01-F-932 70720d8b to durations
adding ba-01-F-932 ad601c9a to frequencies
loading script "felix_peak_hop_argon_2CDD.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x5.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=139.8, duration=0.012060880661
script duration name:peak_hop_argon_2CDD seconds:140.0
loading script "felix_peak_hop_argon_2CDD.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x5.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.78949737549e-05
loading script "felix_peak_hop_argon_2CDD.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x5.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.69820404053e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000109910964966
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000101089477539
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000108003616333
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=2.0, duration=8.58306884766e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.32080841064e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000126123428345
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.29696655273e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.0001060962677
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.82012939453e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000197887420654
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.48634338379e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.00011682510376
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.20159912109e-05
executed snippet estimated_duration=384.0, duration=0.0561311244965
script duration name:air_x5 seconds:384.0
loading script "felix_peak_hop_argon_2CDD.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x5.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000164985656738
executed snippet estimated_duration=4.0, duration=0.00404691696167
Script duration 524.0
Run total estimated duration= 525.000
peak_hop_argon_2CDD in script context. using previous estimated duration
script duration name:peak_hop_argon_2CDD seconds:140.0
pump_ms in script context. using previous estimated duration
air_x5 in script context. using previous estimated duration
script duration name:air_x5 seconds:384.0
pump_extraction_line in script context. using previous estimated duration
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
script duration name:peak_hop_argon_2CDD seconds:140.0
script duration name:air_x5 seconds:384.0
Script duration 524.0
Run total estimated duration= 525.000
nruns=20 before=5.0, run_dur=10500.0, btw=19.0
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/Argon2CDDtest.rem.txt
/Users/obama/PychronDev/experiments/rem/Argon2CDDtest.ex.txt
doing event level: 3
add run
