do run
loading script "felix_peak_hop_argon_2CDD_CDD_center.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=139.8, duration=0.0105650424957
script duration name:peak_hop_argon_2CDD_CDD_center seconds:140.0
loading script "felix_peak_hop_argon_2CDD_CDD_center.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.50339508057e-05
loading script "felix_peak_hop_argon_2CDD_CDD_center.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
loading script "felix_peak_hop_argon_2CDD_CDD_center.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000134944915771
executed snippet estimated_duration=4.0, duration=0.000944137573242
Script duration 140.0
Run total estimated duration= 141.000
run duration: 0:02:21
doing event level: 2
15:12:58 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 5018147248
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run a-01-F-2589
loading script "felix_peak_hop_argon_2CDD_CDD_center.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run a-01-F-2589
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
15:12:58 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=AX(CDD),L2(CDD),H2,H1,AX,L1, signals=0.00000,0.03527,15.30913,0.21956,-0.03106,0.21402
15:12:58 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:12:58 -- ******* Pre Extraction Check Passed *******
=================================================================================
15:12:58 -- stopping status monitor. block=True
stop 5009953040
Status monitor stopped
Status monitor finished
15:13:03 -- starting status monitor
start 5009953040
StatusMonitor period=3. Frequencies(state=1, checksum=3, lock=5, owner=5)
start extraction
no extraction script
15:13:07 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection H1(CDD),0.0 ===>> Error: could not set Deflection H1(CDD) Set to 0
SetDeflection L2(CDD),0.0 ===>> Error: could not set Deflection L2(CDD) Set to 0
SetDeflection L1(CDD),0.0 ===>> Error: could not set Deflection L1(CDD) Set to 0
SetDeflection H2(CDD),600.0 ===>> Error: could not set Deflection H2(CDD) Set to 600
SetExtractionFocus 1.65 ===>> OK
SetHV 9900.0 ===>> OK
SetExtractionLens 63.57 ===>> OK
SetExtractionSymmetry 3.35 ===>> OK
SetIonRepeller -5.15 ===>> OK
SetElectronEnergy 125.02 ===>> OK
SetYSymmetry 38.07 ===>> OK
send trap current 250.0
GetParameter Trap Current Readback ===>> 248.942501373375
SetParameter Trap Current Set,250.0 ===>> OK
updating mftable name argon_2CDD
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon_2CDD.csv
============ MFtable ===========
Isotope  H2     AX(CDD)L2(CDD)
Ar40     3.7670 --- ---
Ar38     --- 3.7930 ---
Ar36     --- --- 3.7666
PHHCbs   --- 3.8081 ---
================================
get initial guess discrete
get initial guess discrete
get initial guess discrete
======== Configuration Finished ========
GetYSymmetry ===>> 38.07
GetZSymmetry ===>> 3.34554334554335
GetParameter Trap Current Readback ===>> 248.047427211133
GetHighVoltage ===>> 9900
start measurement
do measurement
L#=a-01-F analysis type=air
Measurement Started felix_peak_hop_argon_2CDD_CDD_center.py
15:13:08 -- ******* Measurement Started felix_peak_hop_argon_2CDD_CDD_center.py *******
state changed from not run to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 63.57
GetYSymmetry ===>> 38.07
GetZSymmetry ===>> 3.34554334554335
GetZFocus ===>> 1.66056166056166
GetDeflection H2 (CDD) ===>> 3250
GetDeflection H1 (CDD) ===>> 3250
GetDeflection AX (CDD) ===>> 0
GetDeflection L1 (CDD) ===>> 3250
GetDeflection L2 (CDD) ===>> 0
GetGain H2 ===>> 0.9809305
GetGain H1 ===>> 0.9706
GetGain AX ===>> 0.01
GetGain L1 ===>> 0.970094835296087
GetGain L2 ===>> 0.967359864778375
GetGain H2(CDD) ===>> 0
GetGain H1(CDD) ===>> 0
GetGain AX(CDD) ===>> 0
GetGain L1(CDD) ===>> 0
GetGain L2(CDD) ===>> 0
GetParameter Trap Current Readback ===>> 248.830617103095
GetParameter Source Current Readback ===>> 862.380333272294
pre measurement save
New frame /Users/obama/PychronDev/data/isotopes/11/26f1c7-9d02-40fd-9066-9ef3d4a5af29.h5
flush and close file /Users/obama/PychronDev/data/isotopes/11/26f1c7-9d02-40fd-9066-9ef3d4a5af29.h5
testing...
no interpolation path defined
molweights={'PHHCl': 38.13021421, 'Ar40': 39.9624, 'PM41': 41.0, 'Ar35': 35.0, 'Ar36': 35.9675, 'Ar37': 36.9668, 'PHHCbs': 38.9016474, 'Ar38': 37.9627, 'Ar39': 38.964, 'PM42': 42.0}
setting detector H2 to PM42 (42.0624)
setting detector H1 to PM41 (41.0624)
setting detector AX to Ar40 (40.0624)
setting detector L1 to Ar39 (39.0624)
setting detector L2 to Ar38 (37.9624)
setting detector H2(CDD) to PM42 (41.9624)
setting detector H1(CDD) to PM41 (40.9624)
setting detector AX(CDD) to Ar40 (39.9624)
setting detector L1(CDD) to Ar39 (38.9624)
setting detector L2(CDD) to Ar38 (38.0624)
executed snippet estimated_duration=155.4, duration=0.0136570930481
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'AX(CDD)', 'L1', 'L2(CDD)') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
creating plots for detectors [Detector(H2), Detector(H1), Detector(AX), Detector(AX(CDD)), Detector(L1), Detector(L2(CDD))]
clear isotope group
setting isotope det=H2, iso=PM42
setting isotope det=H1, iso=PM41
setting isotope det=AX, iso=Ar40
setting isotope det=AX(CDD), iso=Ar40
setting isotope det=L1, iso=Ar39
setting isotope det=L2(CDD), iso=Ar38
setting previous blanks
 - setting Ar40 blank 0.142+/-0.035
 - setting Ar36 blank 0.00144+/-0.00027
 - setting Ar37 blank -0.001+/-0.021
 - setting Ar38AX blank -0.01+/-0.04
 - setting Ar38AX(CDD) blank 0.0014+/-0.0004
 - setting Ar39 blank -0.04+/-0.04
load analysis view
set_spectrometer_configuration ('argon_2CDD',) {}
======== Sending configuration ========
SetDeflection H1(CDD),0.0 ===>> Error: could not set Deflection H1(CDD) Set to 0
SetDeflection L2(CDD),0.0 ===>> Error: could not set Deflection L2(CDD) Set to 0
SetDeflection L1(CDD),0.0 ===>> Error: could not set Deflection L1(CDD) Set to 0
SetDeflection H2(CDD),600.0 ===>> Error: could not set Deflection H2(CDD) Set to 600
SetExtractionFocus 1.65 ===>> OK
SetHV 9900.0 ===>> OK
SetExtractionLens 63.57 ===>> OK
SetExtractionSymmetry 3.35 ===>> OK
SetIonRepeller -5.15 ===>> OK
SetElectronEnergy 125.02 ===>> OK
SetYSymmetry 38.07 ===>> OK
send trap current 250.0
GetParameter Trap Current Readback ===>> 248.159311481414
SetParameter Trap Current Set,250.0 ===>> OK
updating mftable name argon_2CDD
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon_2CDD.csv
============ MFtable ===========
Isotope  H2     AX(CDD)L2(CDD)
Ar40     3.7670 --- ---
Ar38     --- 3.7930 ---
Ar36     --- --- 3.7666
PHHCbs   --- 3.8081 ---
================================
get initial guess discrete
get initial guess discrete
get initial guess discrete
======== Configuration Finished ========
GetYSymmetry ===>> 38.07
GetZSymmetry ===>> 3.34554334554335
GetParameter Trap Current Readback ===>> 248.271195751694
GetHighVoltage ===>> 9900
position_magnet ('Ar40',) {'detector': 'H2'}
detector Detector(H2)
POSITION Ar40 H2
molweights={'PHHCl': 38.13021421, 'Ar40': 39.9624, 'PM41': 41.0, 'Ar35': 35.0, 'Ar36': 35.9675, 'Ar37': 36.9668, 'PHHCbs': 38.9016474, 'Ar38': 37.9627, 'Ar39': 38.964, 'PM42': 42.0}
setting detector H2 to Ar40 (39.9624)
setting detector H1 to Ar39 (38.9624)
setting detector AX to Ar38 (37.9624)
setting detector L1 to Ar37 (36.9624)
setting detector L2 to Ar36 (35.8624)
setting detector H2(CDD) to Ar40 (39.8624)
setting detector H1(CDD) to Ar39 (38.8624)
setting detector AX(CDD) to Ar38 (37.8624)
setting detector L1(CDD) to Ar37 (36.8624)
setting detector L2(CDD) to Ar36 (35.9624)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76702
GetHighVoltage ===>> 9900
positioning Ar40 (3.76702) on H2
setting magnet DAC
current  : 3.767023
requested: 3.767020
Delta Dac: 0.000003
Checking detector protection. dv=0.00000
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.76702 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x12b20e830>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x12d2774d0>"
setting label 0 H2 Ar40
setting label 1 H1 Ar39
setting label 2 AX Ar38
setting label 3 AX(CDD) Ar38AX(CDD)
setting label 4 L1 Ar37
setting label 5 L2(CDD) Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x130e242f0>"
setting label 0 H2 Ar40
setting label 1 H1 Ar39
setting label 2 AX Ar38
setting label 3 AX(CDD) Ar38AX(CDD)
setting label 4 L1 Ar37
setting label 5 L2(CDD) Ar36
equilibrate () {'delay': 3, 'inlet': 'H', 'outlet': 'V', 'eqtime': 15.0}
Equilibration Started
15:13:09 -- ******* Equilibration Started *******
checking ownership. requestor=192.168.2.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close V ===>> OK
GetIndicatorState V ===>> False
change switch state (True, True)
15:13:09 -- CLOSE  VALVE-V (Felix Ion Pump)
waiting 3s before opening inlet value ('H',)
checking ownership. requestor=192.168.2.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open H ===>> OK
GetIndicatorState H ===>> OK
change switch state (True, True)
15:13:13 -- OPEN   VALVE-H (Felix Inlet)
set_time_zero (0,) {}
sniff (15.0,) {}
equilibrating for 15.0sec
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(AX(CDD)), Detector(L1), Detector(L2(CDD))]
add group /sniff/Ar40 (Group) u'' table H2
add group /sniff/Ar39 (Group) u'' table H1
add group /sniff/Ar38 (Group) u'' table AX
add group /sniff/Ar38 (Group) u'' table AX(CDD)
add group /sniff/Ar37 (Group) u'' table L1
add group /sniff/Ar36 (Group) u'' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/11/26f1c7-9d02-40fd-9066-9ef3d4a5af29.h5
measuring sniff. ncounts=15.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
measurement period (ms) = 1048.576
Equilibration Finished
15:13:28 -- ******* Equilibration Finished *******
checking ownership. requestor=192.168.2.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
15:13:28 -- CLOSE  VALVE-H (Felix Inlet)
Post Equilibration Started felix_pump_extraction_line.py
15:13:28 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000237941741943
executed snippet estimated_duration=4.0, duration=0.00200295448303
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000148057937622
Pump Bone
close () {'description': 'Felix Inlet'}
close name=--- desc=Felix Inlet
checking ownership. requestor=192.168.2.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
15:13:28 -- CLOSE  VALVE-H (Felix Inlet)
-------------------------- close None (Felix Inlet) result=[(True, True)]
State checksums do not match. Local:341903400 Remote:1314305188
State checksum failed
action=close, ok=True, locked=[False]
is_closed ('A',) {}
is A () closed?
is closed False
close () {'description': 'CO2 Laser to Bone'}
close name=--- desc=CO2 Laser to Bone
checking ownership. requestor=192.168.2.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Bone) result=[(True, False)]
action=close, ok=True, locked=[True]
sleep (1,) {}
SLEEP 1.0
waiting for write to finish
measurement finished
estimated time: 15.729 actual time: :15.866
flush and close file /Users/obama/PychronDev/data/isotopes/11/26f1c7-9d02-40fd-9066-9ef3d4a5af29.h5
set_spectrometer_configuration ('argon_2CDD',) {}
======== Sending configuration ========
caching configuration from /Users/obama/PychronDev/setupfiles/spectrometer/configurations/argon_2CDD.cfg
SetDeflection H1(CDD),0.0 ===>> Error: could not set Deflection H1(CDD) Set to 0
SetDeflection L2(CDD),0.0 ===>> Error: could not set Deflection L2(CDD) Set to 0
SetDeflection L1(CDD),0.0 ===>> Error: could not set Deflection L1(CDD) Set to 0
SetDeflection H2(CDD),600.0 ===>> Error: could not set Deflection H2(CDD) Set to 600
SetExtractionFocus 1.65 ===>> OK
SetHV 9900.0 ===>> OK
SetExtractionLens 63.57 ===>> OK
SetExtractionSymmetry 3.35 ===>> OK
SetIonRepeller -5.15 ===>> OK
SetElectronEnergy 125.02 ===>> OK
SetYSymmetry 38.07 ===>> OK
send trap current 250.0
GetParameter Trap Current Readback ===>> 248.830617103095
SetParameter Trap Current Set,250.0 ===>> OK
updating mftable name argon_2CDD
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon_2CDD.csv
============ MFtable ===========
Isotope  H2     AX(CDD)L2(CDD)
Ar40     3.7670 --- ---
Ar38     --- 3.7930 ---
Ar36     --- --- 3.7666
PHHCbs   --- 3.8081 ---
================================
get initial guess discrete
get initial guess discrete
get initial guess discrete
======== Configuration Finished ========
GetYSymmetry ===>> 38.07
GetZSymmetry ===>> 3.34554334554335
GetParameter Trap Current Readback ===>> 248.047427211133
GetHighVoltage ===>> 9900
load_hops ('hops/argon_2CDDF.yaml',) {}
define_hops ([{'counts': 10, 'settle': 5, 'positioning': {'detector': 'H2', 'isotope': 'Ar40'}, 'cup_configuration': [{'protect': False, 'active': True, 'detector': 'H2', 'is_baseline': False, 'isotope': 'Ar40', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'H1', 'is_baseline': False, 'isotope': 'Ar39', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'AX', 'is_baseline': False, 'isotope': 'Ar38', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'L1', 'is_baseline': False, 'isotope': 'Ar37', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'L2(CDD)', 'is_baseline': False, 'isotope': 'Ar36', 'deflection': 0}]}, {'counts': 20, 'settle': 5, 'positioning': {'detector': 'AX(CDD)', 'isotope': 'Ar38', 'use_af_demag': False}, 'cup_configuration': [{'protect': False, 'active': True, 'detector': 'AX(CDD)', 'is_baseline': False, 'isotope': 'Ar38', 'deflection': 0}]}],) {}
set_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar40" to "('Parabolic', 'SEM')"
No fit for "Ar38AX". defaulting to linear. check the measurement script "felix_peak_hop_argon_2CDD_CDD_center.py"
set "Ar38AX" to "linear"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
No fit for "Ar38AX(CDD)". defaulting to linear. check the measurement script "felix_peak_hop_argon_2CDD_CDD_center.py"
set "Ar38AX(CDD)" to "linear"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
set "L2(CDD)" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX(CDD)" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
peak_hop () {'ncycles': 10, 'hops': [{'counts': 10, 'settle': 5, 'positioning': {'detector': 'H2', 'isotope': 'Ar40'}, 'cup_configuration': [{'protect': False, 'active': True, 'detector': 'H2', 'is_baseline': False, 'isotope': 'Ar40', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'H1', 'is_baseline': False, 'isotope': 'Ar39', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'AX', 'is_baseline': False, 'isotope': 'Ar38', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'L1', 'is_baseline': False, 'isotope': 'Ar37', 'deflection': 0}, {'protect': False, 'active': True, 'detector': 'L2(CDD)', 'is_baseline': False, 'isotope': 'Ar36', 'deflection': 0}]}, {'counts': 20, 'settle': 5, 'positioning': {'detector': 'AX(CDD)', 'isotope': 'Ar38', 'use_af_demag': False}, 'cup_configuration': [{'protect': False, 'active': True, 'detector': 'AX(CDD)', 'is_baseline': False, 'isotope': 'Ar38', 'deflection': 0}]}]}
adding conditionals 
make new hop generatior
add group /signal/Ar40 (Group) u'' table H2
add group /signal/Ar39 (Group) u'' table H1
add group /signal/Ar38 (Group) u'' table AX
add group /signal/Ar37 (Group) u'' table L1
add group /signal/Ar36 (Group) u'' table L2(CDD)
add group /signal/Ar38 (Group) u'' table AX(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/11/26f1c7-9d02-40fd-9066-9ef3d4a5af29.h5
measuring signal. ncounts=430.0
"signal" increment series count="2" fit count="1" regressing="True"
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=192.168.2.137
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Bone to Turbo'}
open name=--- desc=Bone to Turbo
checking ownership. requestor=192.168.2.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open C ===>> OK
GetIndicatorState C ===>> OK
change switch state (True, True)
15:13:30 -- OPEN   VALVE-C (Bone to Turbo)
-------------------------- open None (Bone to Turbo) result=[(True, True)]
starting measurement
measurement period (ms) = 1048.576
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H2', 'H1', 'AX', 'L1', 'L2(CDD)']
Peak hop Deflections=[0, 0, 0, 0, 0]
Peak hop DeflectionsPairs=[('H2', 0), ('H1', 0), ('AX', 0), ('L1', 0), ('L2(CDD)', 0)]
SetDeflection L2 (CDD),0.0 ===>> OK
----------------------- HOP Ar40 H2
detector Detector(H2)
POSITION Ar40 H2
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
H2 map mass to dac 39.9624 >> 3.76702
GetHighVoltage ===>> 9900
positioning Ar40 (3.76702) on H2
setting magnet DAC
current  : 3.767020
requested: 3.767020
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.76702 ===>> OK
set_dac. change=False
update detector isotope pairing
detectors=['H2', 'H1', 'AX', 'L1', 'L2(CDD)']
isotopes=['Ar40', 'Ar39', 'Ar38', 'Ar37', 'Ar36']
updating pairing H2 - Ar40
updating pairing H1 - Ar39
updating pairing AX - Ar38
updating pairing L1 - Ar37
updating pairing L2(CDD) - Ar36
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Getter GP-50'}
open name=--- desc=Bone to Getter GP-50
checking ownership. requestor=192.168.2.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
GetIndicatorState N ===>> OK
change switch state (True, True)
15:13:30 -- OPEN   VALVE-N (Bone to Getter GP-50)
-------------------------- open None (Bone to Getter GP-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Diode Laser'}
open name=--- desc=Bone to Diode Laser
checking ownership. requestor=192.168.2.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open B ===>> OK
GetIndicatorState B ===>> OK
change switch state (True, True)
15:13:31 -- OPEN   VALVE-B (Bone to Diode Laser)
-------------------------- open None (Bone to Diode Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to CO2 Laser'}
open name=--- desc=Bone to CO2 Laser
checking ownership. requestor=192.168.2.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open D ===>> OK
GetIndicatorState D ===>> OK
change switch state (True, True)
============ Exception ==============
Traceback (most recent call last):
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 520, in _dispatch_change_event
    self.dispatch( handler, *args )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 483, in dispatch
    handler( *args )
File "/Users/obama/.pychron.1/updates/pychron/experiment/plot_panel.py", line 363, in _update_display
    self.analysis_view.load_computed(self.isotope_group, new_list=False)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 203, in load_computed
    self._load_air_computed(an, new_list)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 313, in _load_air_computed
    self._update_ratios()
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 296, in _update_ratios
    noncorrected = self._get_non_corrected_ratio(niso, diso)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 249, in _get_non_corrected_ratio
    return niso.get_non_detector_corrected_value() / diso.get_non_detector_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
15:13:31 -- OPEN   VALVE-D (Bone to CO2 Laser)
-------------------------- open None (Bone to CO2 Laser) result=[(True, True)]
set states for children of O. state=False
refresh_canvas_needed fired
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 432, in _get_value_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 436, in _get_error_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 432, in _get_value_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 436, in _get_error_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 432, in _get_value_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 436, in _get_error_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 432, in _get_value_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 436, in _get_error_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 432, in _get_value_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 436, in _get_error_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 520, in _dispatch_change_event
    self.dispatch( handler, *args )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 483, in dispatch
    handler( *args )
File "/Users/obama/.pychron.1/updates/pychron/experiment/plot_panel.py", line 363, in _update_display
    self.analysis_view.load_computed(self.isotope_group, new_list=False)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 203, in load_computed
    self._load_air_computed(an, new_list)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 313, in _load_air_computed
    self._update_ratios()
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 296, in _update_ratios
    noncorrected = self._get_non_corrected_ratio(niso, diso)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 249, in _get_non_corrected_ratio
    return niso.get_non_detector_corrected_value() / diso.get_non_detector_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('FelixCO2Flag',) {}
release FelixCO2Flag
Set FelixCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=4.46692800522
PumpBone.py completed successfully
gosub finished
get_resource_value () {'name': 'FelixMiniboneFlag'}
Read FelixMiniboneFlag ===>> 0
Get Resource Value FelixMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=4.47477889061
felix_pump_extraction_line.py completed successfully
Post Equilibration Finished
15:13:33 -- ******* Post Equilibration Finished *******
============ Exception ==============
Traceback (most recent call last):
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 520, in _dispatch_change_event
    self.dispatch( handler, *args )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 483, in dispatch
    handler( *args )
File "/Users/obama/.pychron.1/updates/pychron/experiment/plot_panel.py", line 363, in _update_display
    self.analysis_view.load_computed(self.isotope_group, new_list=False)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 203, in load_computed
    self._load_air_computed(an, new_list)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 313, in _load_air_computed
    self._update_ratios()
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 296, in _update_ratios
    noncorrected = self._get_non_corrected_ratio(niso, diso)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 249, in _get_non_corrected_ratio
    return niso.get_non_detector_corrected_value() / diso.get_non_detector_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 432, in _get_value_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 436, in _get_error_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 432, in _get_value_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 436, in _get_error_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 432, in _get_value_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 436, in _get_error_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 432, in _get_value_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 436, in _get_error_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 432, in _get_value_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/Users/obama/.pychron.1/updates/pychron/core/ui/qt/tabular_editor.py", line 500, in data
    return adapter.get_text(obj, name, row, column)
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 323, in get_text
    return self._result_for( 'get_text', object, trait, row, column )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 531, in _result_for
    return handler()
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traitsui/tabular_adapter.py", line 582, in <lambda>
    return lambda: getattr( self, name )
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/adapters.py", line 436, in _get_error_text
    v = self.item.get_intensity()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 568, in get_intensity
    v = self.get_disc_corrected_value() * (self.ic_factor or 1.0)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 581, in get_disc_corrected_value
    return self.get_non_detector_corrected_value() * disc
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 520, in _dispatch_change_event
    self.dispatch( handler, *args )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 483, in dispatch
    handler( *args )
File "/Users/obama/.pychron.1/updates/pychron/experiment/plot_panel.py", line 363, in _update_display
    self.analysis_view.load_computed(self.isotope_group, new_list=False)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 203, in load_computed
    self._load_air_computed(an, new_list)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 313, in _load_air_computed
    self._update_ratios()
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 296, in _update_ratios
    noncorrected = self._get_non_corrected_ratio(niso, diso)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 249, in _get_non_corrected_ratio
    return niso.get_non_detector_corrected_value() / diso.get_non_detector_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 520, in _dispatch_change_event
    self.dispatch( handler, *args )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 483, in dispatch
    handler( *args )
File "/Users/obama/.pychron.1/updates/pychron/experiment/plot_panel.py", line 363, in _update_display
    self.analysis_view.load_computed(self.isotope_group, new_list=False)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 203, in load_computed
    self._load_air_computed(an, new_list)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 313, in _load_air_computed
    self._update_ratios()
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 296, in _update_ratios
    noncorrected = self._get_non_corrected_ratio(niso, diso)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 249, in _get_non_corrected_ratio
    return niso.get_non_detector_corrected_value() / diso.get_non_detector_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
set states for children of R. state=True
refresh_canvas_needed fired
============ Exception ==============
Traceback (most recent call last):
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 520, in _dispatch_change_event
    self.dispatch( handler, *args )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 483, in dispatch
    handler( *args )
File "/Users/obama/.pychron.1/updates/pychron/experiment/plot_panel.py", line 363, in _update_display
    self.analysis_view.load_computed(self.isotope_group, new_list=False)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 203, in load_computed
    self._load_air_computed(an, new_list)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 313, in _load_air_computed
    self._update_ratios()
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 296, in _update_ratios
    noncorrected = self._get_non_corrected_ratio(niso, diso)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 249, in _get_non_corrected_ratio
    return niso.get_non_detector_corrected_value() / diso.get_non_detector_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 520, in _dispatch_change_event
    self.dispatch( handler, *args )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 483, in dispatch
    handler( *args )
File "/Users/obama/.pychron.1/updates/pychron/experiment/plot_panel.py", line 363, in _update_display
    self.analysis_view.load_computed(self.isotope_group, new_list=False)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 203, in load_computed
    self._load_air_computed(an, new_list)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 313, in _load_air_computed
    self._update_ratios()
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 296, in _update_ratios
    noncorrected = self._get_non_corrected_ratio(niso, diso)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 249, in _get_non_corrected_ratio
    return niso.get_non_detector_corrected_value() / diso.get_non_detector_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 520, in _dispatch_change_event
    self.dispatch( handler, *args )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 483, in dispatch
    handler( *args )
File "/Users/obama/.pychron.1/updates/pychron/experiment/plot_panel.py", line 363, in _update_display
    self.analysis_view.load_computed(self.isotope_group, new_list=False)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 203, in load_computed
    self._load_air_computed(an, new_list)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 313, in _load_air_computed
    self._update_ratios()
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 296, in _update_ratios
    noncorrected = self._get_non_corrected_ratio(niso, diso)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 249, in _get_non_corrected_ratio
    return niso.get_non_detector_corrected_value() / diso.get_non_detector_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
============ Exception ==============
Traceback (most recent call last):
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 520, in _dispatch_change_event
    self.dispatch( handler, *args )
File "/anaconda2/envs/pychron/lib/python2.7/site-packages/traits/trait_notifiers.py", line 483, in dispatch
    handler( *args )
File "/Users/obama/.pychron.1/updates/pychron/experiment/plot_panel.py", line 363, in _update_display
    self.analysis_view.load_computed(self.isotope_group, new_list=False)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 203, in load_computed
    self._load_air_computed(an, new_list)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 313, in _load_air_computed
    self._update_ratios()
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 296, in _update_ratios
    noncorrected = self._get_non_corrected_ratio(niso, diso)
File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 249, in _get_non_corrected_ratio
    return niso.get_non_detector_corrected_value() / diso.get_non_detector_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
============ End Exception ==========
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX(CDD)']
Peak hop Deflections=[0]
Peak hop DeflectionsPairs=[('AX(CDD)', 0)]
SetDeflection AX (CDD),0.0 ===>> OK
----------------------- HOP Ar38 AX(CDD)
detector Detector(AX(CDD))
POSITION Ar38 AX(CDD)
Mapping mass to dac mass func: "discrete"
using discrete mass mapping
AX(CDD) map mass to dac 37.9627 >> 3.79304
GetDeflection AX (CDD) ===>> 0
GetHighVoltage ===>> 9900
positioning Ar38 (3.79304) on AX(CDD)
setting magnet DAC
current  : 3.767020
requested: 3.793040
Delta Dac: 0.026020
Checking detector protection. dv=0.02602
AF Demag not enabled. self.use_af_demag=True, use_af_demag=False
SetMagnetDAC 3.79304 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
flush and close file /Users/obama/PychronDev/data/isotopes/11/26f1c7-9d02-40fd-9066-9ef3d4a5af29.h5
_execute: Traceback (most recent call last):
  File "/Users/obama/.pychron.1/updates/pychron/pyscripts/pyscript.py", line 360, in execute_snippet
    func(*argv)
  File "<string>", line 80, in main
  File "/Users/obama/.pychron.1/updates/pychron/pyscripts/pyscript.py", line 135, in decorator
    return func(obj, *args, **kw)
  File "/Users/obama/.pychron.1/updates/pychron/pyscripts/measurement_pyscript.py", line 344, in peak_hop
    group=group):
  File "/Users/obama/.pychron.1/updates/pychron/pyscripts/measurement_pyscript.py", line 905, in _automated_run_call
    return func(*args, **kw)
  File "/Users/obama/.pychron.1/updates/pychron/experiment/automated_run/automated_run.py", line 556, in py_peak_hop
    check_conditionals)
  File "/Users/obama/.pychron.1/updates/pychron/experiment/automated_run/automated_run.py", line 2222, in _peak_hop
    series, check_conditionals, sc)
  File "/Users/obama/.pychron.1/updates/pychron/experiment/automated_run/automated_run.py", line 2315, in _measure
    m.measure()
  File "/Users/obama/.pychron.1/updates/pychron/experiment/automated_run/data_collector.py", line 115, in measure
    self._measure(evt)
  File "/Users/obama/.pychron.1/updates/pychron/experiment/automated_run/data_collector.py", line 154, in _measure
    if not self._iter(i):
  File "/Users/obama/.pychron.1/updates/pychron/experiment/automated_run/data_collector.py", line 181, in _iter
    if not self._iter_hook(i):
  File "/Users/obama/.pychron.1/updates/pychron/experiment/automated_run/peak_hop_collector.py", line 46, in _iter_hook
    args = self._do_hop()
  File "/Users/obama/.pychron.1/updates/pychron/experiment/automated_run/peak_hop_collector.py", line 157, in _do_hop
    remove_non_active=False)
  File "/Users/obama/.pychron.1/updates/pychron/experiment/automated_run/automated_run.py", line 969, in set_magnet_position
    return self._set_magnet_position(*args, **kw)
  File "/Users/obama/.pychron.1/updates/pychron/experiment/automated_run/automated_run.py", line 2113, in _set_magnet_position
    self.plot_panel.analysis_view.load(self)
  File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/automated_run_view.py", line 36, in load
    self.load_computed(isotope_group)
  File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 203, in load_computed
    self._load_air_computed(an, new_list)
  File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 313, in _load_air_computed
    self._update_ratios()
  File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 296, in _update_ratios
    noncorrected = self._get_non_corrected_ratio(niso, diso)
  File "/Users/obama/.pychron.1/updates/pychron/processing/analyses/view/main_view.py", line 249, in _get_non_corrected_ratio
    return niso.get_non_detector_corrected_value() / diso.get_non_detector_corrected_value()
  File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 594, in get_non_detector_corrected_value
    v = self.get_baseline_corrected_value()
  File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 502, in get_baseline_corrected_value
    nv = self.uvalue - b
  File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 384, in uvalue
    v = ufloat(self.value, self.error, tag=self.name)
  File "/Users/obama/.pychron.1/updates/pychron/processing/isotope.py", line 306, in error
    v = self.regressor.predict_error(0)
  File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 166, in predict_error
    e = self.predict_error_matrix(x, error_calc)
  File "/Users/obama/.pychron.1/updates/pychron/core/regression/ols_regressor.py", line 203, in predict_error_matrix
    sef = self.calculate_standard_error_fit()
  File "/Users/obama/.pychron.1/updates/pychron/core/regression/base_regressor.py", line 183, in calculate_standard_error_fit
    if residuals:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

Post Measurement Started felix_pump_ms.py
15:13:41 -- ******* Post Measurement Started felix_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.90870666504e-05
Pumping spectrometer
open () {'name': 'V'}
open name=V desc=---
checking ownership. requestor=192.168.2.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open V ===>> OK
GetIndicatorState V ===>> OK
change switch state (True, True)
15:13:41 -- OPEN   VALVE-V (Felix Ion Pump)
-------------------------- open V () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.354645013809
felix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
15:13:42 -- ******* Post Measurement Finished *******
----------------- finish -----------------
state changed from measurement to failed
----------------- stop -----------------
Measurement Finished unsuccessfully. Aborted=False
15:13:42 -- ******* Measurement Finished unsuccessfully. Aborted=False *******
failed execution step Measurement Failed
measurement did not complete successfully
15:13:42 -- Automated run a-01-F-2589 failed duration: 43.336 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=1
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/Argon2CDD_38AX.rem.txt
/Users/obama/PychronDev/experiments/rem/Argon2CDD_38AX.ex.txt
doing event level: 3
add run
